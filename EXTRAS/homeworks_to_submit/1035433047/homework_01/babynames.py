# -*- coding: utf-8 -*-
"""babynames.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X6Ws2cNC_btnpeOO5TswKJGmJ5oo8yk7
"""
"""
Homework_2
Rafael Barrera Quiroz
C.C. 1035433047
"""

import sys
import re
import numpy as np
import pandas as pd

def extract_names(file):
  year=re.findall(r"\d+",file)[0]  ##year of file
  fi=open(file,'r')
  page=fi.read()
  mix=re.findall(r"<td>(\w+)",page)  ##List with all names and rankings
  numbers=[mix[3*i] for i in range(int(len(mix)/3))]  ##List with all numbers
  [mix.remove(i) for i in numbers]
  names=mix  ##List with all names
  names=np.array(names)
  names=names.reshape((1000,2))
  all_names=[" ".join([names[i][j],numbers[i]]) for i in range(len(numbers)) for j in range(2)]  ##List name+ranking
  all_names=np.array(all_names)
  names=np.ndarray.flatten(names)
  repeat=[list(np.where(names==names[i])[0]) for i in range(names.shape[0])]
  repeat_1=[i[1] for i in repeat if len(i)>=2 if i[1]>i[0]]  #Index position of names repeat in all_names list
  repeat_1=np.unique(np.array(repeat_1))  #Index position of names repeat in all_names list without repeat index  
  mask=[False if i in repeat_1 else True for i in range(all_names.shape[0])]  ##Mask use it to remove repeat names of all_names list
  mask=np.array(mask)
  all_names=np.unique(all_names[mask])
  all_names=list(all_names)
  all_names.insert(0,year)
  text = '\n'.join(all_names) + '\n'
  return text

def main():
  args = sys.argv[1:]

  if not sys.argv:
    print('usage: [--summaryfile] file [file ...]')
    sys.exit(1)

  # Notice the summary flag and remove it from args if it is present.
  summary = False
  if args[0] == '--summaryfile':
    summary = True
    del args[0]
    for i in args:
      with open(i+'.summary','w') as f:
        f.write(extract_names(i))
  
  else:
    summary = True
    for i in args:
      print(extract_names(i))
  
if __name__ == '__main__':
  main()

start='baby'
end='.html'
arr=np.arange(1990,2010,2)
files=["".join(("".join((start,str(i))),end)) for i in arr]

N=max([np.delete(np.array(extract_names(i).split('\n')),-1).shape[0] for i in files])
F=N-np.delete(np.array(extract_names(files[0]).split('\n')),-1).shape[0]
all_data=np.array([np.hstack((np.delete(np.array(extract_names(files[0]).split('\n')),-1),np.nan*np.ones(F)))]).T
for i in range(len(files)-1):
  F=N-np.delete(np.array(extract_names(files[i+1]).split('\n')),-1).shape[0]
  col=np.array([np.hstack((np.delete(np.array(extract_names(files[i+1]).split('\n')),-1),np.nan*np.ones(F)))]).T
  all_data=np.hstack((all_data,col))

df=pd.DataFrame(data=all_data[1:],columns=all_data[0])

df

df.to_csv('names_files.csv',index=False)

pd.read_csv('names_files.csv')

